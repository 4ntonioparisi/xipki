<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (c) 2013 - 2018 Lijun Liao

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<xs:schema xmlns="http://xipki.org/ca/conf/v2"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://xipki.org/ca/conf/v2"
  elementFormDefault="qualified">
  <!--  CAConfiguration -->
  <xs:element name="caconf" type="caconfType"/>
  <xs:complexType name="caconfType">
    <xs:all>
      <xs:element name="properties" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="property" type="nameValueType" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>The element name specifies the property name, the the element
                value specifies the property value. The property propname can be referenced by
                ${propname}.

                Property baseDir is reserved which points to the parent directory
                of the configuration file</xs:documentation>
                </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="signers" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="signer" type="signerType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="requestors" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="requestor" type="requestorType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publishers" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="publisher" type="publisherType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="profiles" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="profile" type="profileType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cas" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ca" type="caType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="users" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="user" type="userType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="basedir" type="xs:string">
      <xs:annotation>
        <xs:documentation>Specify the base directory for relative path specified in this
        configuration file. Use 'APP_DIR' for application working directory.
        Default is the directory where this configuration file locates. Will be
        ignored if this configuration file is contained in a ZIP file.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="signerType">
    <xs:all>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="conf" type="fileOrValueType" minOccurs="0"/>
      <xs:element name="cert" type="fileOrBinaryType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="nameValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="requestorType">
    <xs:sequence>
      <xs:element name="type" type="xs:string"/>
      <xs:choice>
        <xs:element name="conf" type="fileOrValueType"/>
        <xs:element name="binaryConf" type="fileOrBinaryType"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="userType">
    <xs:sequence>
      <!-- default to true -->
      <xs:element name="active" type="xs:boolean" minOccurs="0"/>
      <xs:choice>
        <xs:element name="password" type="xs:string"/>
        <!-- hashed password -->
        <xs:element name="hashedPassword" type="xs:string"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="publisherType">
    <xs:all>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="conf" type="fileOrValueType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="profileType">
    <xs:all>
      <xs:element name="art" type="xs:int" minOccurs="0"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="conf" type="fileOrValueType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="caType">
    <xs:all>
      <xs:element name="caInfo" type="caInfoType" minOccurs="0"/>
      <xs:element name="aliases" type="aliasesType" minOccurs="0"/>
      <xs:element name="profiles" type="profilesType" minOccurs="0"/>
      <xs:element name="requestors" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="requestor" type="caHasRequestorType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="users" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="user" type="caHasUserType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publishers" type="publishersType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="genSelfIssuedType">
    <xs:all>
      <xs:element name="csr" type="fileOrBinaryType"/>
      <xs:element name="profile" type="xs:string"/>
      <xs:element name="serialNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="certOutform" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Output format of the generated certificate</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="caInfoType">
    <xs:all>
      <!-- general CA configuration -->
      <xs:element name="cert" type="fileOrBinaryType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If genSelfIssued is preset, it must be absent. Otherwise it
          specifies the CA certificate</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="duplicateKey" type="xs:boolean"/>
      <xs:element name="duplicateSubject" type="xs:boolean"/>
      <xs:element name="expirationPeriod" type="xs:int" minOccurs="0"/>
      <xs:element name="extraControl" type="fileOrValueType" minOccurs="0"/>
      <xs:element name="genSelfIssued" type="genSelfIssuedType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A new self-issued CA certificate will be generated</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keepExpiredCertDays" type="xs:int" minOccurs="0"/>
      <xs:element name="permissions" type="permissionsType"/>
      <xs:element name="maxValidity" type="xs:string"/>
      <xs:element name="cmpControl" type="xs:string" minOccurs="0"/>
      <xs:element name="crlControl" type="xs:string" minOccurs="0"/>
      <xs:element name="scepControl" type="xs:string" minOccurs="0"/>
      <xs:element name="cmpResponderName" type="xs:string" minOccurs="0"/>
      <xs:element name="scepResponderName" type="xs:string" minOccurs="0"/>
      <xs:element name="crlSignerName" type="xs:string" minOccurs="0"/>
      <xs:element name="protocolSupport" type="xs:string"/>
      <xs:element name="saveReq" type="xs:boolean"/>
      <xs:element name="signerType" type="xs:string"/>
      <xs:element name="signerConf" type="fileOrValueType" minOccurs="0"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element name="validityMode" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid values are strict, cutoff and lax. Default is strict</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nextCrlNo" type="xs:long"/>
      <xs:element name="numCrls" type="xs:int" minOccurs="0"/>
      <xs:element name="snSize" type="xs:int"/>
      <xs:element name="caUris" type="caUrisType" minOccurs="0"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="permissionsType">
    <xs:sequence>
      <xs:element name="permission" type="xs:string" minOccurs="0" maxOccurs="99"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="caHasRequestorType">
    <xs:sequence>
      <xs:element name="requestorName" type="xs:string"/>
      <xs:element name="ra" type="xs:boolean"/>
      <xs:element name="permissions" type="permissionsType"/>
      <xs:element name="profiles" type="profilesType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="caHasUserType">
    <xs:sequence>
      <xs:element name="userName" type="xs:string"/>
      <xs:element name="permissions" type="permissionsType"/>
      <xs:element name="profiles" type="profilesType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="profilesType">
    <xs:sequence>
      <xs:element name="profile" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publishersType">
    <xs:sequence>
      <xs:element name="publisher" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="aliasesType">
    <xs:sequence>
      <xs:element name="alias" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="caUrisType">
    <xs:all>
      <xs:element name="cacertUris" type="urisType" minOccurs="0"/>
      <xs:element name="crlUris" type="urisType" minOccurs="0"/>
      <xs:element name="deltacrlUris" type="urisType" minOccurs="0"/>
      <xs:element name="ocspUris" type="urisType" minOccurs="0"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="urisType">
    <xs:sequence>
      <xs:element name="uri" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fileOrValueType">
    <xs:choice>
      <xs:element name="value" type="xs:string"/>
      <xs:element name="file" type="xs:string"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="fileOrBinaryType">
    <xs:choice>
      <xs:element name="binary" type="xs:base64Binary"/>
      <xs:element name="file" type="xs:string"/>
    </xs:choice>
  </xs:complexType>
</xs:schema>

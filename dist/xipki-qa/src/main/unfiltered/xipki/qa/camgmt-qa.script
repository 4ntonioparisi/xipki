printUsage = "false"
argsValid = "false"
errMsg = ""

if { "$1" equals "" } {
  printUsage = "true"
  argsValid = "true"
} {
  if { "$1" equals "help" } {
    printUsage = "true"
    argsValid = "true"
  } {
    if { "$1" equals "-l" } {
      HASH = $2
      TOKEN_TYPE = $3
      SIG_TYPE = $4
      KEYSPEC =$5
    } {
      HASH = $1
      TOKEN_TYPE = $2
      SIG_TYPE = $3
      KEYSPEC =$4
    }

   list = [PKCS11 PKCS12]; each ($list) {
     if { "$TOKEN_TYPE" equals $it } {
       argsValid = "true"
     }
   }

    if { "$argsValid" equals "false" } {
      errMsg = "invalid TOKEN_TYPE $TOKEN_TYPE"
    } {
      argsValid = "false"

      list = [RSA RSAPSS EC PLAINEC DSA]; each ($list) {
        if { "$SIG_TYPE" equals $it } {
          argsValid = "true"
        }
      }
    }

    if { "$argsValid" equals "false" } {
      errMsg = "invalid SIG_TYPE $SIG_TYPE"
    } {
      argsValid = "false"

      if { "$SIG_TYPE" equals "PLAINEC" } {
        list = [SHA1 SHA256 SHA384 SHA512]; each ($list) {
          if { "$HASH" equals $it } {
            argsValid = "true"
          }
        }

        if { "$argsValid" equals "false" } {
          errMsg = "invalid combination $HASH and $SIG_TYPE"
        }
      } {
        list = [SHA1 SHA256 SHA384 SHA512 SHA3-224 SHA3-256 SHA3-384 SHA3-512]; each ($list) {
          if { "$HASH" equals $it } {
            argsValid = "true"
          }
        }
      }
    }

    if { "$argsValid" equals "false" } {
      if { "$errMsg" equals ""} {
        errMsg = "invalid HASH $HASH"
      }
    }

  }
}

if { $argsValid equals "false" } {
  echo "$errMsg"
  echo ""
  printUsage = "true"
}
if { $printUsage equals "true" } {
  echo "Usage: "
  echo ""
  echo "source file:./xipki/qa/camgmt-qa.script [option] <hash algo> <token type> <signature type> [<keyspec>]"
  echo "    hash algo:       SHA1, SHA224, SHA256, SHA384, SHA512"
  echo "                     SHA3-224, SHA3-256, SHA3-384, SHA3-512"
  echo "                     The SHA3 algorithms are not for PLAINEC."
  echo "    token type:      PKCS11, PKCS12"
  echo "    signature type:  RSA, RSAPSS, EC, PLAINEC, DSA"
  echo "    keyspec:         keysize for signature types RSA, RSAPSS and DSA,"
  echo "                     curve name for signature types EC and PLAINEC"
  echo "options"
  echo "    -l               configure CAs using command 'load-conf'"
} {
  feature:install -r xipki-caqa-shell

  source file:./xipki/qa/qa.d/prepare-keys.script

  xi:copy-file -f xipki/qa/qa.d/ca-load.script-template \
    xipki/qa/qa.d/ca-load.script

  xi:copy-file -f xipki/qa/qa.d/ca.script-template \
    xipki/qa/qa.d/ca.script

  xi:replace --old "REPLACEME-CMP_SIGALGO" --new "$CMP_SIGALGO" \
    xipki/qa/qa.d/ca.script

  dsaPlain = ""

  if { "$SIG_TYPE" equals "PLAINEC" } {
    dsaPlain = "--dsa-plain"
  }

  xi:replace --old "REPLACEME-DSAPLAIN" --new "${dsaPlain}" \
    xipki/qa/qa.d/ca-load.script

  xi:replace --old "REPLACEME-DSAPLAIN" --new "${dsaPlain}" \
    xipki/qa/qa.d/ca.script

  rsaMgf1 = ""
  if { "$SIG_TYPE" equals "RSAPSS" } {
    rsaMgf1 = "--rsa-mgf1"
  }

  xi:replace --old "REPLACEME-RSAMGF1" --new "${rsaMgf1}" \
    xipki/qa/qa.d/ca-load.script

  xi:replace --old "REPLACEME-RSAMGF1" --new "${rsaMgf1}" \
    xipki/qa/qa.d/ca.script

  if { "$1" equals "-l" } {
    source file:./xipki/qa/qa.d/ca-load.script
  } {
    source file:./xipki/qa/qa.d/ca.script
  }

  echo "Sleeping 1 second"
  sleep 1

  echo "#################################################################"
  echo "#                          Environment                          #"
  echo "#################################################################"

  ca:env-add --name qa-env1 --value value1

  caqa:env-check --name qa-env1 --value value1

  ca:env-up --name qa-env1 --value value2

  caqa:env-check --name qa-env1 --value value2

  # Environment name exists
  caqa:neg-env-add --name qa-env1 --value value3

  caqa:env-check --name qa-env1 --value value2

  ca:env-rm qa-env1

  # Environment name does not exist
  caqa:neg-env-rm qa-env-not-exits

  echo "#################################################################"
  echo "#                           CMP control                         #"
  echo "#################################################################"
  
  CMP_CONTROL = 'send.ca=true,messageTime.bias=300,rr.aki.required=true,group.enroll=true,protection.sigalgo=SHA256withRSA:SHA256withRSAandMGF1:SHA256withDSA:SHA256withECDSA,popo.sigalgo=SHA256withRSA:SHA256withRSAandMGF1:SHA256withDSA:SHA256withECDSA'

  ca:cmpcontrol-add --name qa-cmpcontrol1 --conf "${CMP_CONTROL}"

  caqa:cmpcontrol-check --name qa-cmpcontrol1 --conf "${CMP_CONTROL}"

  ca:cmpcontrol-up --name qa-cmpcontrol1 \
    --conf send.ca=true,messageTime.bias=300

  caqa:neg-cmpcontrol-up --name qa-cmpcontrol1 \
    --conf send.ca=true,messageTime.bias=300,protection.sigalgo=INVALIDALGO

  caqa:cmpcontrol-check --name qa-cmpcontrol1 \
    --conf send.ca=true,messageTime.bias=300

  # name already exists
  caqa:neg-cmpcontrol-add --name qa-cmpcontrol1 \
    --conf send.ca=true,messageTime.bias=300

  ca:cmpcontrol-rm qa-cmpcontrol1

  caqa:neg-cmpcontrol-rm qa-cmpcontrol-not-exists

  echo "#################################################################"
  echo "#                           Requestor                           #"
  echo "#################################################################"
  caqa:requestor-check --name requestor1 \
    --cert xipki/security/tlskeys/tls-client.der

  ca:requestor-add --name qa-requestor1 \
    --cert xipki/security/tlskeys/tls-server.der

  # name already exists
  caqa:neg-requestor-add --name qa-requestor1 \
    --cert xipki/security/tlskeys/tls-server.der

  # invalid certificate
  caqa:neg-requestor-add --name qa-requestor1 \
    --cert xipki/qa/camgmt-qa.script

  caqa:requestor-check --name qa-requestor1 \
    --cert xipki/security/tlskeys/tls-server.der

  ca:requestor-up --name qa-requestor1 \
    --cert xipki/security/tlskeys/tls-client.der

  caqa:requestor-check --name qa-requestor1 \
    --cert xipki/security/tlskeys/tls-client.der

  ca:requestor-rm qa-requestor1

  # name does not exist
  caqa:neg-requestor-rm qa-requestor1

  echo "#################################################################"
  echo "#                           Responder                           #"
  echo "#################################################################"
  caqa:responder-check --name responder1 --signer-type PKCS12 \
    --signer-conf password=PBE:AQfQj/oIsHT0tGydAasTIJz0xhCA0KBFQoVh11UwhiQ/PMWZOpnXbErRLbX3Jc9VcQIqXg==,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA256withRSA

  ca:responder-add --name qa-responder1 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA1withRSA

  # name already exists
  caqa:neg-responder-add --name qa-responder1 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA1withRSA

  # password incorrect
  caqa:neg-responder-add --name qa-responder2 --signer-type PKCS12 \
    --signer-conf password=123456,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA1withRSA

  # invalid algo
  caqa:neg-responder-add --name qa-responder2 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=INVALIDALGO

  caqa:responder-check --name qa-responder1 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA1withRSA

  ca:responder-up --name qa-responder1 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA256withRSA

  caqa:responder-check --name qa-responder1 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA256withRSA

  ca:responder-rm qa-responder1

  # name does not exist
  caqa:neg-responder-rm qa-responder1

  echo "#################################################################"
  echo "#                    Add certificate profile                    #"
  echo "#################################################################"
  caqa:profile-check --name subca --type XML \
    --conf-file xipki/qa/certprofile/certprofile-subca.xml

  ca:profile-add --name qa-subca --type XML \
    --conf-file xipki/qa/certprofile/certprofile-subca-complex.xml

  # name already exists
  caqa:neg-profile-add --name qa-subca --type XML \
    --conf-file xipki/qa/certprofile/certprofile-subca-complex.xml

  # unknown type
  caqa:neg-profile-add --name qa-subca2 --type java:packagename.classname

  # invalid conf for the given type
  caqa:neg-profile-add --name qa-subca --type XML \
    --conf invalid-profile-conf

  # invalid type
  caqa:neg-profile-up --name qa-subca --type invalid-type

  # invalid conf
  caqa:neg-profile-up --name qa-subca --conf invalid-profile-conf

  caqa:profile-check --name qa-subca --type XML \
    --conf-file xipki/qa/certprofile/certprofile-subca-complex.xml

  ca:profile-rm qa-subca

  # name does not exist
  caqa:neg-profile-rm qa-subca

  echo "#################################################################"
  echo "#                         Add CRL signer                        #"
  echo "#################################################################"
  caqa:crlsigner-check --name casign-crlsigner --signer-type CA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=02:00

  echo "direct CRL signer (signed by CA)"

  ca:crlsigner-add --name qa-direct-crlsigner1 --signer-type CA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=03:00

  echo "neg-crlsigner-add: name already exists"

  caqa:neg-crlsigner-add --name qa-direct-crlsigner1 --signer-type CA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=03:00

  echo "neg-crlsigner-add: invalid control"

  caqa:neg-crlsigner-add --name qa-direct-crlsigner2 --signer-type CA \
    --control updateMode=unknown,fullCRL.intervals=1,overlap.minutes=90,interval.time=03:00

  caqa:crlsigner-check --name qa-direct-crlsigner1 --signer-type CA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=03:00

  ca:crlsigner-up --name qa-direct-crlsigner1 \
    --control updateMode=interval,fullCRL.intervals=2,overlap.minutes=90,interval.time=03:00

  caqa:crlsigner-check --name qa-direct-crlsigner1 \
    --control updateMode=interval,fullCRL.intervals=2,overlap.minutes=90,interval.time=03:00

  echo "neg-crlsigner-up: invalid fullCRL.intervals"

  caqa:neg-crlsigner-up --name qa-direct-crlsigner1 \
    --control updateMode=interval,fullCRL.intervals=abc,overlap.minutes=90,interval.time=03:00

  caqa:crlsigner-check --name qa-direct-crlsigner1 \
    --control updateMode=interval,fullCRL.intervals=2,overlap.minutes=90,interval.time=03:00

  ca:crlsigner-rm qa-direct-crlsigner1

  echo "neg-crlsigner-rm: name does not exist"

  caqa:neg-crlsigner-rm qa-direct-crlsigner1

  # indrect CRL signer

  ca:crlsigner-add --name qa-indirect-crlsigner1 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/qa/keys/crlsigner.p12,algo=SHA256withRSA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=03:00

  echo "neg-crlsigner-add: No keyusage CRLSign"

  caqa:neg-crlsigner-add --name qa-indirect-crlsigner2 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA1withRSA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=02:00

  echo "neg-crlsigner-add: Unknown signature algorithm"

  caqa:neg-crlsigner-add --name qa-indirect-crlsigner2 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/qa/keys/crlsigner.p12,algo=INVALIDALGO \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=02:00

  ca:crlsigner-rm qa-indirect-crlsigner1

  echo "#################################################################"
  echo "#                              CA                               #"
  echo "#################################################################"

  caqa:ca-check --name subca1-complex-name \
--permission all \
    --max-validity 5y \
    --sn-bitlen 63  \
    --signer-type $TOKEN_TYPE \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/subca1.der \
    --cmp-control cmpcontrol1 \
    --responder responder1 \
    --duplicate-subject yes \
    --duplicate-key yes

  caqa:ca-check --name rca1 \
    --permission all \
    --max-validity 10y \
    --sn-bitlen 63  \
    --signer-type $TOKEN_TYPE \
    --cert output/rca1.der \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/rca1.der \
    --cmp-control cmpcontrol1 \
    --responder responder1 \
    --duplicate-subject yes \
    --duplicate-key yes \
    --validity-mode cutoff

  # change the CA configuration

  ca:ca-up --name rca1 \
    --permission enroll_cert \
    --permission revoke_cert \
    --max-validity 8y \
    --ocsp-uri http://localhost:8080/ocsp/responder2 \
    --ca-cert-uri http://example.org/rca1-2.der \
    --duplicate-subject no \
    --duplicate-key no \
    --validity-mode strict

  caqa:ca-check --name rca1 \
    --permission enroll_cert \
    --permission revoke_cert \
    --max-validity 8y \
    --sn-bitlen 63  \
    --signer-type $TOKEN_TYPE \
    --cert output/rca1.der \
    --ocsp-uri http://localhost:8080/ocsp/responder2 \
    --ca-cert-uri http://example.org/rca1-2.der \
    --cmp-control cmpcontrol1 \
    --responder responder1 \
    --duplicate-subject no \
    --duplicate-key no \
    --validity-mode strict

  # for commands neg-gen-rca
  ca:profile-add --name rca --type XML --conf-file xipki/qa/certprofile/certprofile-rootca.xml

  # The CA named rca2 exists. No new CA with the same name is allowed

  if { $TOKEN_TYPE equals "PKCS11" } {
    CA_SIGNER_CONF_RCA = "algo=$CA_SIGNER_ALGO,slot=$SLOT,key-label=rca1"
  }

  if { $TOKEN_TYPE equals "PKCS12" } {
    CA_SIGNER_CONF_RCA = "password=PBE:AQfQj/oIsHT0tGydAasTIJz0xhCA0KBFQoVh11UwhiQ/PMWZOpnXbErRLbX3Jc9VcQIqXg==,keystore=file:output/rca1.p12,algo=$CA_SIGNER_ALGO"
  }

  echo "neg-gen-rca: CA named rca1 already exists"

  caqa:neg-gen-rca \
    --name rca1 \
    --csr output/rca1.csr \
    --profile rca \
    --out output/rca1-2.der \
    --permission all \
    --sn-bitlen 63  \
    --next-crl-no 2 \
    --max-validity 10y \
    --signer-type $TOKEN_TYPE \
    --signer-conf $CA_SIGNER_CONF_RCA \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/rca1.der \
    --cmp-control cmpcontrol1 \
    --responder responder1 \
    --duplicate-subject  yes \
    --duplicate-key yes \
    --validity-mode cutoff

  ca:profile-rm rca

  echo "neg-ca-add: certificate and key do not match"

  caqa:neg-ca-add \
    --name rca2 \
    --permission all \
    --sn-bitlen 63  \
    --next-crl-no 2 \
    --max-validity 10y \
    --signer-type $TOKEN_TYPE \
    --signer-conf $CA_SIGNER_CONF_RCA \
    --cert output/subca1.der \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/rca1.der \
    --cmp-control cmpcontrol1 \
    --responder responder1 \
    --duplicate-subject  yes \
    --duplicate-key yes \
    --validity-mode cutoff

  echo "neg-ca-add: CMP control name does not exist"

  caqa:neg-ca-add \
    --name rca2 \
    --permission all \
    --sn-bitlen 63  \
    --next-crl-no 2 \
    --max-validity 10y \
    --signer-type $TOKEN_TYPE \
    --signer-conf $CA_SIGNER_CONF_RCA \
    --cert output/rca1.der \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/rca1.der \
    --cmp-control cmpcontrol2 \
    --responder responder1 \
    --duplicate-subject  yes \
    --duplicate-key yes \
    --validity-mode cutoff

  echo "neg-ca-add: CRL signer name does not exist"

  caqa:neg-ca-add \
    --name rca2 \
    --permission all \
    --sn-bitlen 63  \
    --next-crl-no 2 \
    --max-validity 10y \
    --signer-type $TOKEN_TYPE \
    --signer-conf $CA_SIGNER_CONF_RCA \
    --cert output/rca1.der \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/rca1.der \
    --crl-signer crlsigner2 \
    --cmp-control cmpcontrol1 \
    --responder responder1 \
    --duplicate-subject  yes \
    --duplicate-key yes \
    --validity-mode cutoff

  echo "neg-ca-add: responder name does not exist"

  caqa:neg-ca-add \
    --name rca2 \
    --permission all \
    --sn-bitlen 63  \
    --next-crl-no 2 \
    --max-validity 10y \
    --signer-type $TOKEN_TYPE \
    --signer-conf $CA_SIGNER_CONF_RCA \
    --cert output/rca1.der \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/rca1.der \
    --cmp-control cmpcontrol1 \
    --responder responder2 \
    --duplicate-subject  yes \
    --duplicate-key yes \
    --validity-mode cutoff

  echo "#################################################################"
  echo "#                            CA alias                           #"
  echo "#################################################################"
  caqa:caalias-check --ca rca1 --alias rca

  caqa:caalias-check --ca subca1-complex-name --alias subca

  caqa:caalias-check --ca subcawithcrl1 --alias subcawithcrl

  ca:caalias-add --ca rca1 --alias rca-1

  caqa:caalias-check --ca rca1 --alias rca-1

  ca:caalias-rm rca-1

  echo "#################################################################"
  echo "#                          CA-has-profile                       #"
  echo "#################################################################"

  caqa:caprofile-check --ca rca1 --profile cross

  caqa:caprofile-check --ca rca1 --profile subca

  caqa:caprofile-check --ca rca1 --profile subca-complex

  ca:caprofile-add --ca rca1 --profile tls

  caqa:caprofile-check --ca rca1 --profile tls

  # CA name does not exist

  caqa:neg-caprofile-add --ca rca10 --profile profile-dummy

  # profile name does not exist

  caqa:neg-caprofile-add --ca rca1 --profile profile-dummy

  # invalid permission

  caqa:neg-caprofile-rm --ca rca1 --profile profile-dummy

  echo "#################################################################"
  echo "#                         CA-has-publisher                      #"
  echo "#################################################################"
  caqa:capub-check --ca rca1 --publisher ocsp-publisher

  # CA name does not exist
  caqa:neg-capub-add --ca rca10 --publisher publisher-dummy

  # CA name does not exist
  caqa:neg-capub-rm --ca rca10 --publisher publisher-dummy

  # Publisher name does not exist
  caqa:neg-capub-add --ca rca1 --publisher publisher-dummy

  # Publisher name does not exist
  caqa:neg-capub-rm --ca rca1 --publisher publisher-dummy

  echo "#################################################################"
  echo "#                         CA-has-requestor                      #"
  echo "#################################################################"
  caqa:careq-check --ca rca1 --requestor requestor1 --ra yes \
    --permission all --profile all

  ca:careq-rm --ca rca1 --requestor requestor1 \

  ca:careq-add --ca rca1 --requestor requestor1 --ra yes \
    --permission enroll_cert --permission revoke_cert

  caqa:careq-check --ca rca1 --ra yes --requestor requestor1 \
    --permission enroll_cert --permission revoke_cert --profile null

  # CA name does not exist
  caqa:neg-careq-add --ca rca10 --requestor requestor-dummy \
    --permission all --profile all

  # CA name does not exist
  caqa:neg-careq-rm --ca rca10 --requestor requestor-dummy

  # Requestor name does not exist
  caqa:neg-careq-add --ca rca1 --requestor requestor-dummy \
    --permission all --profile all

  # Requestor name does not exist
  caqa:neg-careq-rm --ca rca1 --requestor requestor-dummy

  # Requestor name does not exist
  caqa:neg-careq-add --ca rca1 --requestor requestor-dummy \
    --permission all --profile all

  ## Positive CA qa script

  ##### caalias #####

  ca:caalias-info

  ca:caalias-info rca

  ca:caalias-rm rca

  ca:caalias-add --alias rca --ca rca1

  ##### caprofile #####

  ca:caprofile-info --ca rca1

  ca:caprofile-rm --profile subca --ca rca1

  ca:caprofile-add --profile subca --ca rca1

  ##### capub #####

  ca:capub-info --ca rca1

  ca:capub-rm --publisher ocsp-publisher --ca rca1

  ca:capub-add --ca rca1 --publisher ocsp-publisher

  ##### careq #####

  ca:careq-info --ca rca1

  ca:careq-rm --requestor requestor1 --ca rca1

  ca:careq-add --requestor requestor1 --ca rca1 --profile all \
    --ra yes --permission all

  ##### clear-publishqueue #####

  ca:clear-publishqueue --ca rca1 --publisher ocsp-publisher

  ca:clear-publishqueue --ca all --publisher all

  ##### cmpcontrol #####

  ca:cmpcontrol-add --name cmpcontrol2 \
    --conf send.ca=true,messageTime.bias=300,protection.sigalgo=SHA256withRSA:SHA256withRSAandMGF1:SHA256withDSA:SHA256withECDSA

  ca:cmpcontrol-info

  ca:cmpcontrol-info cmpcontrol2

  ca:cmpcontrol-up --name cmpcontrol2 \
    --conf send.ca=true,messageTime.bias=300,protection.sigalgo=SHA256withRSA

  ca:cmpcontrol-rm cmpcontrol2

  ##### crlsigner #####

  ca:crlsigner-add --name casign-crlsigner2 --signer-type CA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=03:00

  ca:crlsigner-info

  ca:crlsigner-info casign-crlsigner2

  ca:crlsigner-up --name casign-crlsigner2 --signer-type CA \
    --control updateMode=interval,fullCRL.intervals=1,overlap.minutes=90,interval.time=03:30

  ca:crlsigner-rm casign-crlsigner2

  ##### env #####

  env-add --name env2 --value value2

  ca:env-info

  ca:env-info env2

  ca:env-up --name env2 --value value2-2

  ca:env-rm env2

  ##### profile #####

  ca:profile-info

  ca:profile-info ocsp

  ca:profile-export --name subca --out output/certprofile-subca.export

  ca:profile-up --name subca --conf-file output/certprofile-subca.export

  ##### publisher #####

  ca:publisher-info

  ca:publisher-info ocsp-publisher

  ca:publisher-export --name ocsp-publisher --out output/publisher.export

  ca:publisher-up --name ocsp-publisher --conf-file output/publisher.export

  ca:publisher-add --name ocsp-publisher2 --type ocsp \
    --conf-file output/publisher.export

  ca:publisher-rm ocsp-publisher2

  ##### requestor #####

  ca:requestor-add --name requestor2 --cert xipki/security/tlskeys/tls-client.der

  ca:requestor-info

  ca:requestor-info requestor2

  ca:requestor-up --name requestor2 --cert xipki/security/tlskeys/tls-client.der

  ca:requestor-rm requestor2

  ##### responder #####

  ca:responder-add --name responder2 --signer-type PKCS12 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA256withRSA

  ca:responder-info

  ca:responder-info responder2

  ca:responder-up --name responder2 \
    --signer-conf password=1234,keystore=file:xipki/security/tlskeys/tls-server.p12,algo=SHA1withRSA

  ca:responder-rm responder2

  ##### cert #####

  ca:revoke-cert --ca rca1 --reason certificateHold --cert output/subcawithcrl1.der

  ca:unrevoke-cert --ca rca1 --cert output/subcawithcrl1.der

  ca:revoke-cert --ca rca1 --reason certificateHold --cert output/subcawithcrl1.der

  ca:unrevoke-cert --ca rca1 --cert output/subcawithcrl1.der

  ca:revoke-cert --ca rca1 --reason keyCompromise --cert output/subcawithcrl1.der

  ca:revoke-cert --ca rca1 --reason keyCompromise --cert output/subca1.der

  ca:remove-cert --ca rca1 --cert output/subcawithcrl1.der

  ca:remove-cert --ca rca1 --cert output/subca1.der

  ##### CA #####

  ca:ca-revoke --reason keyCompromise rca1

  ca:ca-unrevoke rca1

  ca:notify-change

  ca:system-status

  ca:unlock

  ca:ca-info

  ca:ca-info rca1

  ca:ca-up --name rca1 \
    --permission enroll_cert \
    --permission revoke_cert \
    --max-validity 8y \
    --ocsp-uri http://localhost:8080/ocsp/responder2 \
    --ca-cert-uri http://example.org/rca1-2.der \
    --duplicate-subject no \
    --duplicate-key no \
    --validity-mode strict

  ca:ca-up --name rca1 \
    --permission all \
    --max-validity 10y \
    --ocsp-uri http://localhost:8080/ocsp/responder1 \
    --ca-cert-uri http://example.org/rca1.der \
    --duplicate-subject yes \
    --duplicate-key yes \
    --validity-mode cutoff

  feature:uninstall xipki-caqa-shell
}

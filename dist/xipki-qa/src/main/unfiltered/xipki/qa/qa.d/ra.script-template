################################################################################
#
# Copyright (c) 2013 - 2018 Lijun Liao
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

## Generate CRL
ca:gencrl --ca subcawithcrl1 --out output/subcawithcrl1-camgmt-gen.crl

## Get CRL
ca:getcrl --ca subcawithcrl1 --out output/subcawithcrl1-camgmt-get.crl

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/cross1.p12 --password 1234 \
  --subject "CN=cross1,O=xipki,C=DE" \
  --out output/cross1.csr

ca:enroll-cert --ca rootca1 --profile cross \
  --csr output/cross1.csr --out output/cross1.der

echo "#################################################################"
echo "#              Manage certificate with RA Client                #"
echo "#################################################################"
feature:install -r xipki-caclient-shell

echo "Sleeping 1 second"
sleep 1

## Check the healthy status

xi:cmp-health --ca rootca1

xi:cmp-health --ca subca1

xi:cmp-health --ca subcawithcrl1

## Enroll certificates
# Certificate ocsp1

## Create the CSR for the command caqa:check-cert in QA
xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/ocsp1.p12 --password 1234 \
  --out output/ocsp1.csr \
  --subject "CN=ocsp1,2.5.4.97=VATDE-123456789,O=xipki,C=DE" \
  --need-extension authorityInfoAccess

xi:cmp-enroll-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/ocsp1.p12 --password 1234 \
  --out output/ocsp1.der --profile OCSP \
  --subject "CN=ocsp1,2.5.4.97=VATDE-123456789,O=xipki,C=DE" \
  --need-extension authorityInfoAccess

xi:update-cert-p12 --p12 output/ocsp1.p12 --password 1234 \
  --cert output/ocsp1.der \
  --ca-cert output/subcawithcrl1.der \
  --ca-cert output/rootca1.der

# Certificate ocsp2

## Create the CSR for the command caqa:check-cert in QA
xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/ocsp2.p12 --password 1234 \
  --out output/ocsp2.csr \
  --subject "CN=ocsp2,2.5.4.97=VATDE-123456789,O=xipki,C=DE" \
  --need-extension authorityInfoAccess

xi:cmp-enroll-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/ocsp2.p12 --password 1234 \
  --out output/ocsp2.der --profile OCSP \
  --subject "CN=ocsp2,2.5.4.97=VATDE-123456789,O=xipki,C=DE" \
  --need-extension authorityInfoAccess

xi:update-cert-p12 --p12 output/ocsp2.p12 --password 1234 \
  --cert output/ocsp2.der --ca-cert output/subcawithcrl1.der \
  --ca-cert output/rootca1.der

## Revocate certificates
xi:cmp-revoke --ca subcawithcrl1 --cert output/ocsp2.der --reason keyCompromise

# Certificate multiple-ous

## Create the CSR for the command caqa:check-cert in QA
xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/multiple-ous1.p12 --password 1234 \
  --out output/multiple-ous1.csr \
  --subject "CN=multiple-ous1,OU=A12345,OU=54321,O=xipki,C=DE"

xi:cmp-enroll-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/multiple-ous1.p12 --password 1234 \
  --out output/multiple-ous1.der --profile multiple-ous \
  --subject "CN=multiple-ous1,OU=A12345,OU=54321,O=xipki,C=DE"

xi:update-cert-p12 --p12 output/multiple-ous1.p12 --password 1234 \
  --cert output/multiple-ous1.der \
  --ca-cert output/subcawithcrl1.der \
  --ca-cert output/rootca1.der

## Create the CSR for the command caqa:check-cert in QA
xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/multiple-ous2.p12 --password 1234 \
  --out output/multiple-ous2.csr \
  --subject "CN=multiple-ous2,OU=54321,OU=A12345,O=xipki,C=DE"

xi:cmp-enroll-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/multiple-ous2.p12 --password 1234 \
  --out output/multiple-ous2.der --profile multiple-ous \
  --subject "CN=multiple-ous2,OU=54321,OU=A12345,O=xipki,C=DE"

xi:update-cert-p12 --p12 output/multiple-ous2.p12 --password 1234 \
  --cert output/multiple-ous2.der \
  --ca-cert output/subcawithcrl1.der \
  --ca-cert output/rootca1.der

# Certificate multi-valued-rdn

## Create the CSR for the command caqa:check-cert in QA
xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/multi-valued-rdn1.p12 --password 1234 \
  --out output/multi-valued-rdn1.csr \
  --subject "CN=multi-valued-rdn1,OU=A12345,O=xipki,C=DE"

xi:cmp-enroll-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/multi-valued-rdn1.p12  --password 1234 \
  --out output/multi-valued-rdn1.der --profile multi-valued-rdn \
  --subject "CN=multi-valued-rdn1,OU=A12345,O=xipki,C=DE"

xi:update-cert-p12 --p12 output/multi-valued-rdn1.p12 --password 1234 \
  --cert output/multi-valued-rdn1.der \
  --ca-cert output/subcawithcrl1.der \
  --ca-cert output/rootca1.der

# Certificate qc

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/qc1.p12 --password 1234 \
  --out output/qc1.csr \
  --subject "CN=qc1,2.5.4.97=VATDE-123456789,O=xipki,C=DE" \
  --need-extension authorityInfoAccess

xi:cmp-enroll-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/qc1.p12 --password 1234 \
  --out output/qc1.der --profile qc \
  --subject "CN=qc1,2.5.4.97=VATDE-123456789,O=xipki,C=DE" \
  --need-extension authorityInfoAccess

xi:update-cert-p12 --p12 output/qc1.p12 --password 1234 \
  --cert output/qc1.der \
  --ca-cert output/subcawithcrl1.der \
  --ca-cert output/rootca1.der

# Certificate ee-complex1 with complex subject (parsable in openssl)

xi:csr-p12-complex --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --subject "CN=ee-complex1,O=xipki,C=DE" \
  --p12 output/ee-complex1.p12 --password 1234 \
  --out output/ee-complex1.csr \
  --qc-eu-limit EUR:150:15 \
  --biometric-type 0 \
  --biometric-hash SHA256 \
  --biometric-file xipki/README.md \
  --biometric-uri https://example.org/?id=123

xi:cmp-csr-enroll --csr output/ee-complex1.csr \
  --out output/ee-complex1.der \
  --profile ee-complex

xi:update-cert-p12 --p12 output/ee-complex1.p12 --password 1234 \
  --cert output/ee-complex1.der \
  --ca-cert output/subca1.der \
  --ca-cert output/rootca1.der

# Certificate ee-complex1 with complex subject (not parsable in openssl due to complex subject)

xi:csr-p12-complex --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --subject "CN=ee-complex2,O=xipki,C=DE" \
  --p12 output/ee-complex2.p12 --password 1234 \
  --out output/ee-complex2.csr \
  --qc-eu-limit EUR:150:15 \
  --biometric-type 0 \
  --biometric-hash SHA256 \
  --biometric-file xipki/README.md \
  --biometric-uri https://example.org/?id=123 \
  --complex-subject

xi:cmp-csr-enroll --csr output/ee-complex2.csr --out output/ee-complex2.der \
  --profile ee-complex

xi:update-cert-p12 --p12 output/ee-complex2.p12 --password 1234 \
  --cert output/ee-complex2.der \
  --ca-cert output/subca1.der \
  --ca-cert output/rootca1.der

# Certificate tls1

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/tls1.p12 --password 1234 \
  --subject "CN=tls1.xipki.org,O=xipki,C=DE" \
  --out output/tls1.csr \

xi:cmp-csr-enroll --csr output/tls1.csr --out output/tls1.der --profile tls

xi:update-cert-p12 --p12 output/tls1.p12 --password 1234 \
  --cert output/tls1.der \
  --ca-cert output/subca1.der \
  --ca-cert output/rootca1.der

# Certificate tls-inc-sn1 (all with same subject and profile but different key)
# 1.

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/tls-inc-sn1.p12 --password 1234 \
  --subject "CN=tls-inc-sn1.xipki.org,O=xipki,C=DE" \
  --out output/tls-inc-sn1.csr

xi:cmp-csr-enroll --csr output/tls-inc-sn1.csr \
  --out output/tls-inc-sn1.der --profile tls-inc-sn

# 2.

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/tls-inc-sn1-1.p12 --password 1234 \
  --subject "CN=tls-inc-sn1.xipki.org,O=xipki,C=DE" \
  --out output/tls-inc-sn1-1.csr

xi:cmp-csr-enroll --csr output/tls-inc-sn1-1.csr \
  --out output/tls-inc-sn1-1.der --profile tls-inc-sn

# 3.

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/tls-inc-sn1-2.p12 --password 1234 \
  --subject "CN=tls-inc-sn1.xipki.org,O=xipki,C=DE" \
  --out output/tls-inc-sn1-2.csr

xi:cmp-csr-enroll --csr output/tls-inc-sn1-2.csr \
  --out output/tls-inc-sn1-2.der --profile tls-inc-sn

# Certificate tls2

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/tls2.p12 --password 1234 \
  --subject "CN=tls2.xipki.org,O=xipki,C=DE" \
  --out output/tls2.csr

xi:cmp-csr-enroll --csr output/tls2.csr --out output/tls2.der --profile tls

xi:update-cert-p12 --p12 output/tls2.p12 --password 1234 \
  --cert output/tls2.der \
  --ca-cert output/subca1.der \
  --ca-cert output/rootca1.der

## Suspend certificates
xi:cmp-revoke --ca subca1 --cert output/tls2.der --reason certificateHold

xi:cmp-unrevoke --ca subca1 --cert output/tls2.der

## Revocate certificates
xi:cmp-revoke --ca subca1 --cert output/tls2.der --reason affiliationChanged

## Enroll certificates

# Certificate tls-c1

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/tls-c1.p12 --password 1234 \
  --subject "CN=tls-c1,O=xipki,C=DE" \
  --out output/tls-c1.csr

xi:cmp-csr-enroll --csr output/tls-c1.csr --out output/tls-c1.der --profile tls-c

xi:update-cert-p12 --p12 output/tls-c1.p12 --password 1234 \
  --cert output/tls-c1.der \
  --ca-cert output/subca1.der \
  --ca-cert output/rootca1.der

# Certificate tls-c2

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/tls-c2.p12 --password 1234 \
  --subject "CN=tls-c2,O=xipki,C=DE" \
  --out output/tls-c2.csr

xi:cmp-csr-enroll --csr output/tls-c2.csr --out output/tls-c2.der \
  --profile tls-c

xi:update-cert-p12 --p12 output/tls-c2.p12 --password 1234 \
  --cert output/tls-c2.der \
  --ca-cert output/subca1.der \
  --ca-cert output/rootca1.der

## Revocate certificates
xi:cmp-revoke --ca subca1 --cert output/tls-c2.der --reason affiliationChanged

# Certificate extended1

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/extended1.p12 --password 1234 \
  --subject "CN=extended1.xipki.org,O=xipki,C=DE" \
  --out output/extended1.csr

xi:cmp-csr-enroll --csr output/extended1.csr --out output/extended1.der --profile extended

xi:update-cert-p12 --p12 output/extended1.p12 --password 1234 \
  --cert output/extended1.der \
  --ca-cert output/subca1.der \
  --ca-cert output/rootca1.der

# Certificate max-time1

xi:csr-p12 --hash $HASH REPLACEME-DSAPLAIN REPLACEME-GM REPLACEME-RSAMGF1 \
  --p12 output/max-time1.p12 --password 1234 \
  --subject "CN=max-time1.xipki.org,O=xipki,C=DE" \
  --out output/max-time1.csr

xi:cmp-csr-enroll --csr output/max-time1.csr --out output/max-time1.der --profile max-time

xi:update-cert-p12 --p12 output/max-time1.p12 --password 1234 \
  --cert output/max-time1.der \
  --ca-cert output/subcawithcrl1.der \
  --ca-cert output/rootca1.der

## Get CRL
xi:cmp-getcrl --ca subcawithcrl1 --out output/subcawithcrl1-1-get.crl

## Generate CRL
xi:cmp-gencrl --ca subcawithcrl1 --out output/subcawithcrl1.crl

## Get CRL
xi:cmp-getcrl --ca subcawithcrl1 --out output/subcawithcrl1-get.crl

echo "#################################################################"
echo "#              Uninstall unneeded features                      #"
echo "#################################################################"
feature:uninstall xipki-caclient-shell

source file:./xipki/qa/scep.script

# JSCEP works only in case of RSA
if { $KEY_TYPE equals "rsa" } then {
  source file:./xipki/qa/jscep.script
}
